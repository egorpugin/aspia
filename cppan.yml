local_settings:
    #storage_dir: .s
    #use_shared_libs: false
    builds:
        vs2017:
            generator: Visual Studio 15 2017
            #cxx_flags: /W0
        vs2017_64:
            generator: Visual Studio 15 2017 Win64
            #cxx_flags: /W0
        vs_preview:
            env:
                VS150COMNTOOLS: c:/Program Files (x86)/Microsoft Visual Studio/Preview/Community/

root_project: pvt.egorpugin.aspia
common_settings:
    c++: 17
    create_default_api: true
    default_api_start: aspia
    root_dir: source
    exclude_from_build:
        - .*rc$
    options:
        any:
            definitions:
                private:
                    - _SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING
                    - _CRT_SECURE_NO_WARNINGS
                    - CORE_IMPLEMENTATION
                public:
                    - _UNICODE
                    - UNICODE
            compile_options:
                msvc:
                    public:
                        - /wd4251 # needs to have dll-interface to be used by clients of
    post_sources: |
        file(GLOB_RECURSE x "${SDIR}/*")
        source_group(TREE ${SDIR} PREFIX "Source Files" FILES ${x})

projects:
    protocols:
        type: lib
        static_only: true
        custom: true
        files:
            - protocol/.*
        dependencies:
            - pvt.cppan.demo.google.protobuf.protobuf: 3
            - name: pvt.cppan.demo.google.protobuf.protoc
              version: 3
        post_sources: |
            file(GLOB_RECURSE protos "${SDIR}/protocol/*.proto")
            foreach(f ${protos})
                cppan_genpb(${f})
            endforeach()

    resources:
        type: lib
        static_only: true
        custom: true
        files:
            - resources/.*

        dependencies:
            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.rcc
              ref: RCC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            #
            set(Qt5Core_RCC_EXECUTABLE ${RCC_COMMAND})
            qt5_add_resources(rcc ${SDIR}/resources/resources.qrc)
            set(src ${src} ${rcc})


    base:
        type: lib
        files:
            - base/.*
        dependencies:
            - protocols
            - pvt.egorpugin.primitives.log: master

    crypto:
        type: lib
        files:
            - crypto/.*
        dependencies:
            public:
                - base
            private:
                - pvt.cppan.demo.jedisct1.libsodium: 1

    desktop_capture:
        type: lib
        files:
            - desktop_capture/.*

        options:
            any:
                link_libraries:
                    win32:
                        public:
                            - Dwmapi

        dependencies:
            public:
                - base
                - pvt.cppan.demo.qtproject.qt.base.gui: 5
            private:
                - pvt.cppan.demo.mysticial.featuredetector: master

    codec:
        type: lib
        files:
            - codec/.*
        dependencies:
            public:
                - base
                - desktop_capture
            private:
                - pvt.cppan.demo.dead2.zlib_ng: develop
                - pvt.cppan.demo.chromium.libyuv.libyuv: master
                - pvt.cppan.demo.webmproject.vpx: 1

    network:
        type: lib
        files:
            - network/.*
        dependencies:
            private:
                - pvt.cppan.demo.qtproject.qt.base.network: 5

            public:
                - crypto

                - name: pvt.cppan.demo.qtproject.qt.base.core
                  ref: CORE
                  version: 5
                - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
                  ref: MOC_COMMAND
                  version: 5

        options:
            any:
                link_libraries:
                    win32:
                        public:
                            - comsuppw
        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

    ipc:
        type: lib
        files:
            - ipc/.*
        dependencies:
            public:
                - crypto

                - pvt.cppan.demo.qtproject.qt.base.network: 5
                - name: pvt.cppan.demo.qtproject.qt.base.core
                  ref: CORE
                  version: 5
                - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
                  ref: MOC_COMMAND
                  version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

    client:
        type: lib
        files:
            - client/.*

        dependencies:
            - codec
            - desktop_capture
            - network

            - pvt.cppan.demo.qtproject.qt.winextras: 5
            - pvt.cppan.demo.qtproject.qt.base.xml: 5
            - name: pvt.cppan.demo.qtproject.qt.base.widgets
              ref: WIDGETS
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.uic
              ref: UIC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

            #
            include(${WIDGETS_SDIR}/src/widgets/Qt5WidgetsMacros.cmake)
            file(GLOB_RECURSE uis "${SDIR}/client/*.ui")
            set(Qt5Widgets_UIC_EXECUTABLE ${UIC_COMMAND})
            qt5_wrap_ui(uic ${uis})
            set(src ${src} ${uic})


    core:
        type: lib
        files:
            - core/.*
        dependencies:
            - crypto
            - pvt.cppan.demo.qtproject.qt.base.core: 5

    hostlib:
        type: lib
        files:
            - hostlib/.*
        options:
            any:
                link_libraries:
                    win32:
                        public:
                            - Wtsapi32
        dependencies:
            - ipc
            - network
            - codec

            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

    aspia_console:
        executable_type: win32
        rc_enabled: false
        files:
            - console/.*
        dependencies:
            - client
            - core
            - resources

            - pvt.cppan.demo.qtproject.qt.base.plugins.platforms.windows: 5
            - pvt.cppan.demo.qtproject.qt.base.plugins.styles.windowsvista: 5
            - pvt.cppan.demo.qtproject.qt.base.winmain: 5
            - name: pvt.cppan.demo.qtproject.qt.base.widgets
              ref: WIDGETS
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.uic
              ref: UIC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

            #
            include(${WIDGETS_SDIR}/src/widgets/Qt5WidgetsMacros.cmake)
            file(GLOB_RECURSE uis "${SDIR}/console/*.ui")
            set(Qt5Widgets_UIC_EXECUTABLE ${UIC_COMMAND})
            qt5_wrap_ui(uic ${uis})
            set(src ${src} ${uic})


    aspia_host_config:
        executable_type: win32
        rc_enabled: false
        files:
            - config/.*
        exclude_from_build:
            - .*manifest$
        dependencies:
            - core
            - resources
            - pvt.cppan.demo.qtproject.qt.base.plugins.platforms.windows: 5
            - pvt.cppan.demo.qtproject.qt.base.plugins.styles.windowsvista: 5
            - pvt.cppan.demo.qtproject.qt.base.winmain: 5

            - name: pvt.cppan.demo.qtproject.qt.base.widgets
              ref: WIDGETS
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.uic
              ref: UIC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

            #
            include(${WIDGETS_SDIR}/src/widgets/Qt5WidgetsMacros.cmake)
            file(GLOB_RECURSE uis "${SDIR}/config/*.ui")
            set(Qt5Widgets_UIC_EXECUTABLE ${UIC_COMMAND})
            qt5_wrap_ui(uic ${uis})
            set(src ${src} ${uic})





    aspia_host_service:
        executable_type: win32
        rc_enabled: false
        files:
            - service/.*

        dependencies:
            - client
            - core
            - hostlib
            - pvt.cppan.demo.qtproject.qt.base.plugins.platforms.windows: 5
            - pvt.cppan.demo.qtproject.qt.base.plugins.styles.windowsvista: 5
            - pvt.cppan.demo.qtproject.qt.base.winmain: 5

            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

    aspia_host:
        executable_type: win32
        rc_enabled: false
        files:
            - host/.*
        options:
            any:
                link_libraries:
                    win32:
                        public:
                            - sas
        dependencies:
            - client
            - core
            - hostlib
            - pvt.cppan.demo.qtproject.qt.base.plugins.platforms.windows: 5
            - pvt.cppan.demo.qtproject.qt.base.plugins.styles.windowsvista: 5
            - pvt.cppan.demo.qtproject.qt.base.winmain: 5

            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

    aspia_host_notifier:
        executable_type: win32
        rc_enabled: false
        files:
            - notifier/.*
        dependencies:
            - desktop_capture
            - ipc
            - core
            - resources
            - pvt.cppan.demo.qtproject.qt.base.plugins.platforms.windows: 5
            - pvt.cppan.demo.qtproject.qt.base.plugins.styles.windowsvista: 5
            - pvt.cppan.demo.qtproject.qt.base.winmain: 5

            - name: pvt.cppan.demo.qtproject.qt.base.widgets
              ref: WIDGETS
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.core
              ref: CORE
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.moc
              ref: MOC_COMMAND
              version: 5
            - name: pvt.cppan.demo.qtproject.qt.base.tools.uic
              ref: UIC_COMMAND
              version: 5

        post_sources: |
            include(${CORE_SDIR}/src/corelib/Qt5CoreMacros.cmake)

            set(moc ${src})
            list(FILTER moc INCLUDE REGEX ".h$")

            find_moc_targets(moc ${moc})

            set(Qt5Core_MOC_EXECUTABLE ${MOC_COMMAND})
            cppan_qt5_wrap_cpp(moc ${moc} TARGET ${this})
            list(FILTER moc INCLUDE REGEX ".cpp$")
            set(src ${src} ${moc})

            #
            include(${WIDGETS_SDIR}/src/widgets/Qt5WidgetsMacros.cmake)
            file(GLOB_RECURSE uis "${SDIR}/notifier/*.ui")
            set(Qt5Widgets_UIC_EXECUTABLE ${UIC_COMMAND})
            qt5_wrap_ui(uic ${uis})
            set(src ${src} ${uic})



